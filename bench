#!/bin/bash

minbench=1
maxbench=2
a=$1

function init_b() {
    rm src/*
}

function b1() {
    echo nocode.rs without emscripten
    build_x nocode.rs b1
}

function b2() {
    echo mybindgen.rs without emscripten
    build_x mybindgen.rs b2
}

function build_x() {
    init_b
    cp msrc/$1 src/lib.rs
    cargo build --target wasm32-unknown-unknown --release
    cp target/wasm32-unknown-unknown/release/wasm_benchmark.wasm bin/$2.wasm
    wasm-bindgen bin/$2.wasm --out-dir bin/ --no-typescript --target no-modules
}

function bn() {
    echo "executing benchmark '$1'"
    case $1 in
        1) b1;;
        2) b2;;
        *) echo error: fatal input error;;
    esac
}

if [[ $# -eq 0 ]]; then
    echo error: needing at least one argument
else
    case $1 in
        all)
            echo bench all
            for i in $(seq $minbench $maxbench); do
                bn $i 
            done
            ;;
        *)              
            if (($minbench<=$a && $a<=$maxbench)); then
                bn $a
            else
                echo "error: needing number argument in the range of 1..$maxbench or 'all'"
            fi
            ;;
    esac
fi
